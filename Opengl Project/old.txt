void draw()
    {
        vector<coordinate2i> t = {
                                        coordinate2i(vertex[0].x,vertex[0].y),
                                        coordinate2i(vertex[1].x,vertex[1].y),
                                        coordinate2i(vertex[2].x,vertex[2].y),
        };

        if (t[0] == t[1] || t[1] == t[2] || t[0] == t[2])
            return;
        if (t[0].x == t[1].x && t[1].x == t[2].x)
            return;

        if (t[0].y == t[1].y && t[1].y == t[2].y)
            return;

        for (int i = 0; i < 3; i++)
            for (int j = 0; j < 3 - 1; j++)
                if (t[j].x > t[j + 1].x)
                    swap(t[j], t[j + 1]);

        
        if (RASTERIZE)
        {
            coordinate2i temp;
            vector<int> point;
            for (int x = t[0].x; x <=t[1].x; x++)
            {
                point = {
                                                GetIntersectPoint(t[0], t[1], x),
                                                GetIntersectPoint(t[0], t[2], x),
                };
                
                if (point[0] == INT_MAX)
                    point[0] = t[1].y;

                if (point[0] > point[1])
                    swap(point[0], point[1]);
                
                temp.x = x;
                for (int y = point[0]; y <=point[1]; y++)
                {
                    temp.y = y;
                    putpixel(temp, color);
                }
            }

            for (int x = t[1].x; x <=t[2].x; x++)
            {
                point = {
                                            GetIntersectPoint(t[1], t[2], x),
                                            GetIntersectPoint(t[0], t[2], x),
                         };

                if (point[0] == INT_MAX)
                    point[0] = t[1].y;

                if (point[0] > point[1])
                    swap(point[0], point[1]);

                temp.x = x;
                for (int y = point[0]; y <=point[1]; y++)
                {
                    temp.y = y;
                    putpixel(temp, color);
                }
            }

            if (Mesh)
            {
                Bresenham_Line(t[0], t[1], coordinate3f(0, 0, 0));
                Bresenham_Line(t[0], t[2], coordinate3f(0, 0, 0));
                Bresenham_Line(t[1], t[2], coordinate3f(0, 0, 0));
            }
        }
        else
        {
            glVertexPointer(2, GL_INT, 0, &t[0]);
            glColor3d(color.x/255, color.y/255, color.z/255);
            glDrawArrays(GL_TRIANGLES, 0, 3);
            if (Mesh)
            {
                vector<coordinate2i> m = {
                                         t[0],
                                         t[1],
                                         t[1],
                                         t[2],
                                         t[2],
                                         t[0],
                };

                glVertexPointer(2, GL_INT, 0, &m[0]);
                glColor3d(0, 0, 0);
                glLineWidth(2);
                glDrawArrays(GL_LINES, 0, 6);
            }
        }
    }
